/* 
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Itofinity.Bitbucket.Refit.Api;
using Itofinity.Bitbucket.Refit.Model;
using Itofinity.Bitbucket.Refit.Client;
using System.Reflection;

namespace Itofinity.Bitbucket.Refit.Test
{
    /// <summary>
    ///  Class for testing Snippet
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SnippetTests
    {
        // TODO uncomment below to declare an instance variable for Snippet
        //private Snippet instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Snippet
            //instance = new Snippet();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Snippet
        /// </summary>
        [Test]
        public void SnippetInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Snippet
            //Assert.IsInstanceOfType<Snippet> (instance, "variable 'instance' is a Snippet");
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Scm'
        /// </summary>
        [Test]
        public void ScmTest()
        {
            // TODO unit test for the property 'Scm'
        }
        /// <summary>
        /// Test the property 'CreatedOn'
        /// </summary>
        [Test]
        public void CreatedOnTest()
        {
            // TODO unit test for the property 'CreatedOn'
        }
        /// <summary>
        /// Test the property 'UpdatedOn'
        /// </summary>
        [Test]
        public void UpdatedOnTest()
        {
            // TODO unit test for the property 'UpdatedOn'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Test]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'Creator'
        /// </summary>
        [Test]
        public void CreatorTest()
        {
            // TODO unit test for the property 'Creator'
        }
        /// <summary>
        /// Test the property 'IsPrivate'
        /// </summary>
        [Test]
        public void IsPrivateTest()
        {
            // TODO unit test for the property 'IsPrivate'
        }

    }

}
