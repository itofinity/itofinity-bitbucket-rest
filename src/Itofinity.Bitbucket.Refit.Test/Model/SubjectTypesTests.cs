/* 
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Itofinity.Bitbucket.Refit.Api;
using Itofinity.Bitbucket.Refit.Model;
using Itofinity.Bitbucket.Refit.Client;
using System.Reflection;

namespace Itofinity.Bitbucket.Refit.Test
{
    /// <summary>
    ///  Class for testing SubjectTypes
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SubjectTypesTests
    {
        // TODO uncomment below to declare an instance variable for SubjectTypes
        //private SubjectTypes instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SubjectTypes
            //instance = new SubjectTypes();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SubjectTypes
        /// </summary>
        [Test]
        public void SubjectTypesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SubjectTypes
            //Assert.IsInstanceOfType<SubjectTypes> (instance, "variable 'instance' is a SubjectTypes");
        }

        /// <summary>
        /// Test the property 'Repository'
        /// </summary>
        [Test]
        public void RepositoryTest()
        {
            // TODO unit test for the property 'Repository'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Test]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'Team'
        /// </summary>
        [Test]
        public void TeamTest()
        {
            // TODO unit test for the property 'Team'
        }

    }

}
