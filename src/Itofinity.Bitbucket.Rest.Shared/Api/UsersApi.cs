/* 
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using Refit;
using Itofinity.Bitbucket.Rest.Client;
using Itofinity.Bitbucket.Rest.Model;

namespace Itofinity.Bitbucket.Rest.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUsersApi
    {
        #region Asynchronous Operations

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// All repositories owned by a user/team. This includes private repositories, but filtered down to the ones that the calling user has access to.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <returns>Task of Error</returns>
        [Get("/teams/{username}/repositories")]
        System.Threading.Tasks.Task<Error> TeamsUsernameRepositoriesGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns details about a specific one of the authenticated user&#39;s email addresses.  Details describe whether the address has been confirmed by the user and whether it is the user&#39;s primary address or not.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <returns>Task of Error</returns>
        [Get("/user/emails/{email}")]
        System.Threading.Tasks.Task<Error> UserEmailsEmailGet([Header("UserAgent")] string userAgent, [AliasAs("email")]string email);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns all the authenticated user&#39;s email addresses. Both confirmed and unconfirmed.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of PaginatedEmailAddresses</returns>
        [Get("/user/emails")]
        System.Threading.Tasks.Task<PaginatedEmailAddresses> UserEmailsGet([Header("UserAgent")] string userAgent);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns the currently logged in user.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of User</returns>
        [Get("/user")]
        System.Threading.Tasks.Task<User> UserGet([Header("UserAgent")] string userAgent);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns the list of accounts that are following this team.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username">The account&#39;s username</param>
        /// <returns>Task of PaginatedUsers</returns>
        [Get("/users/{username}/followers")]
        System.Threading.Tasks.Task<PaginatedUsers> UsersUsernameFollowersGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns the list of accounts this user is following.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username">The user&#39;s username</param>
        /// <returns>Task of PaginatedUsers</returns>
        [Get("/users/{username}/following")]
        System.Threading.Tasks.Task<PaginatedUsers> UsersUsernameFollowingGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Gets the public information associated with a user account.  If the user&#39;s profile is private, &#x60;location&#x60;, &#x60;website&#x60; and &#x60;created_on&#x60; elements are omitted.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username">The account&#39;s username or UUID.</param>
        /// <returns>Task of User</returns>
        [Get("/users/{username}")]
        System.Threading.Tasks.Task<User> UsersUsernameGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a paginated list of webhooks installed on this user account.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <returns>Task of PaginatedWebhookSubscriptions</returns>
        [Get("/users/{username}/hooks")]
        System.Threading.Tasks.Task<PaginatedWebhookSubscriptions> UsersUsernameHooksGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a new webhook on the specified user account.  Account-level webhooks are fired for events from all repositories belonging to that account.  Note that one can only register webhooks on one&#39;s own account, not that of others.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <returns>Task of WebhookSubscription</returns>
        [Post("/users/{username}/hooks")]
        System.Threading.Tasks.Task<WebhookSubscription> UsersUsernameHooksPost([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Deletes the specified webhook subscription from the given user account.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <param name="uid">The installed webhook&#39;s id</param>
        /// <returns>Task of void</returns>
        [Delete("/users/{username}/hooks/{uid}")]
        System.Threading.Tasks.Task UsersUsernameHooksUidDelete([Header("UserAgent")] string userAgent, [AliasAs("username")]string username, [AliasAs("uid")]string uid);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns the webhook with the specified id installed on the given user account.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <param name="uid">The installed webhook&#39;s id.</param>
        /// <returns>Task of WebhookSubscription</returns>
        [Get("/users/{username}/hooks/{uid}")]
        System.Threading.Tasks.Task<WebhookSubscription> UsersUsernameHooksUidGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username, [AliasAs("uid")]string uid);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates the specified webhook subscription.  The following properties can be mutated:  * &#x60;description&#x60; * &#x60;url&#x60; * &#x60;active&#x60; * &#x60;events&#x60;
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <param name="uid">The installed webhook&#39;s id</param>
        /// <returns>Task of WebhookSubscription</returns>
        [Put("/users/{username}/hooks/{uid}")]
        System.Threading.Tasks.Task<WebhookSubscription> UsersUsernameHooksUidPut([Header("UserAgent")] string userAgent, [AliasAs("username")]string username, [AliasAs("uid")]string uid);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// All repositories owned by a user/team. This includes private repositories, but filtered down to the ones that the calling user has access to.
        /// </remarks>
        /// <exception cref="Itofinity.Bitbucket.Rest.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="username"></param>
        /// <returns>Task of Error</returns>
        [Get("/users/{username}/repositories")]
        System.Threading.Tasks.Task<Error> UsersUsernameRepositoriesGet([Header("UserAgent")] string userAgent, [AliasAs("username")]string username);
        #endregion Asynchronous Operations
    }
}
